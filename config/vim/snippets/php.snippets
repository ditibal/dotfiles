priority -40

snippet am "array_map"
$${1:items} = array_map(function($${2:i}) {
	${0}
	return $$2;
}, $$1);
endsnippet

snippet ac "array_column"
$${3:items} = array_column($${1:input}, '${2:column_key}');
endsnippet

snippet ?= "<?= ${0} ?>" i
<?= ${0} ?>
endsnippet

snippet ?
<?php ${0} ?>
endsnippet

snippet ?f
<?php foreach ($${1:items} as $${2:item}): ?>
	${0:${VISUAL}}
<?php endforeach; ?>
endsnippet

snippet ?i
<?php if ($${1:var}): ?>
	${0:${VISUAL}}
<?php endif ?>
endsnippet

snippet t. "" i
$this->
endsnippet

snippet pub "Public function" b
public function ${1:name}(${2:$param})
{
	${VISUAL}${3:return null;}
}
endsnippet

snippet ifem "if (empty(condition)) { ... }"
if (empty($$1)) {
	$0
}
endsnippet

snippet ifis "if (isset(condition)) { ... }"
if (isset($$1)) {
	$0
}
endsnippet

snippet ifnem "if (!empty(condition)) { ... }"
if (!empty($$1)) {
	$0
}
endsnippet

snippet ifnis "if (!isset(condition)) { ... }"
if (!isset($$1)) {
	$0
}
endsnippet

global !p

def camel_case_to_snake_case(name):
    s1 = re.sub('(.)([A-Z][a-z]+)', r'\1_\2', name)
    return re.sub('([a-z0-9])([A-Z])', r'\1_\2', s1).lower()

endglobal

snippet activerecord "ActiveRecord class" b
<?php

namespace `!p
dirname = os.path.dirname(path)

if dirname:
	snip.rv = dirname.replace('/', '\\')
`;

use Yii;
use yii\db\ActiveRecord;

class `!p snip.rv = re.match(r'.*(?=\.)', fn).group()` extends ActiveRecord
{
    public static function tableName()
    {
        return '`!p snip.rv = camel_case_to_snake_case(re.match(r'.*(?=\.)', fn).group())`';
    }

    public function rules()
    {
        return [];
    }

}
endsnippet

snippet d "dump" b
d($$0);
endsnippet

snippet ?d "dump" b
<?php d($$0); ?>
endsnippet

snippet >lj "->leftJoin" b
->leftJoin('${1:table}', '${2:table.id} = ${3:id}')
endsnippet

snippet >andw "->andWhere" b
->andWhere(['$1' => '$2'])
endsnippet

snippet activeform "<?php $form = ActiveForm::begin(); ?>"
<?php $form = ActiveForm::begin(); ?>
	$0
<?php ActiveForm::end(); ?>
endsnippet

snippet "@action(\w+)" "public function action" r
public function action`!p snip.rv = match.group(1)`()
{
	$1
}
endsnippet

snippet "transaction" "transaction" r
$transaction = Yii::$app->db->beginTransaction();

try {
	$transaction->commit();
} catch (Throwable $e) {
	$transaction->rollBack();
	throw $e;
}
endsnippet
