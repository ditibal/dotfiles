#!/bin/python
import subprocess
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('container_name')
parser.add_argument('database_name')
parser.add_argument('dump_path')

container_name = parser.parse_args().container_name
database_name = parser.parse_args().database_name
dump_path = parser.parse_args().dump_path

result = subprocess.run(['docker', 'ps', '-a', '-q', '-f', 'name=' + container_name], stdout=subprocess.PIPE)
container_id = result.stdout.decode('utf-8').strip()

if len(container_id) == 0:
    print(f'The container "{container_name}" does not exist')
    exit()

subprocess.Popen([
    'docker',
    'exec',
    '-i',
    container_name,
    'mysql',
    '-uroot',
    '-ppass',
    '-e',
    'DROP DATABASE IF EXISTS `' + database_name + '`; CREATE DATABASE `' + database_name + '`;'
]).wait()


with open(dump_path, 'r') as f:
    subprocess.Popen(
        [
            'docker',
            'exec',
            '-i',
            container_name,
            'mysql',
            '-uroot',
            '-ppass',
            database_name
        ],
        stdin=f
    ).wait()

print('Done')